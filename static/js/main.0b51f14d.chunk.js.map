{"version":3,"sources":["App.tsx","index.tsx"],"names":["Table","children","style","borderCollapse","TD","title","url","libs","isSuggest","isWakatiGaki","resultTitle","amazonUrl","ndc","target","href","map","lib","i","key","App","useState","source","books","setBooks","searchLib","setLib","kind","setKind","useEffect","filter","find","findByLibrary","useCallback","libName","findByKinds","libNames","concat","Array","from","Set","flatMap","kinds","useFilter","value","onChange","e","book","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b51f14d.chunk.js","sourcesContent":["import React, { ReactNode, useCallback, useEffect, useState } from 'react'\nimport source from './result.json'\n\nconst Table: React.FC<{ children: ReactNode }> = ({ children }) => {\n  return <table style={{ borderCollapse: 'collapse' }}>{children}</table>\n}\n\nconst TD: React.FC<{\n  title: string\n  url: string\n  libs: string[]\n  isSuggest: boolean\n  isWakatiGaki: boolean\n  resultTitle: string\n  amazonUrl: string\n  ndc: string\n}> = ({\n  title,\n  url,\n  libs,\n  isSuggest,\n  isWakatiGaki,\n  resultTitle,\n  amazonUrl,\n  ndc,\n}) => {\n  return (\n    <tr>\n      <td>{ndc}</td>\n      <td>\n        <a target=\"blank\" href={amazonUrl}>\n          {title}\n        </a>\n      </td>\n      <td>\n        {url === 'なし' ? (\n          resultTitle\n        ) : (\n          <a target=\"blank\" href={url}>\n            {resultTitle}\n          </a>\n        )}\n      </td>\n      <td>\n        {libs.map((lib, i) => (\n          <div key={i}>{lib}</div>\n        ))}\n      </td>\n      <td>{isSuggest ? 'した' : 'してない'}</td>\n      <td>{isWakatiGaki ? 'した' : 'してない'}</td>\n    </tr>\n  )\n}\n\ntype Books = {\n  title: string\n  url: string\n  libs: string[]\n  isSuggest: boolean\n  isWakatiGaki: boolean\n  resultTitle: string\n  amazonUrl: string\n  ndc: string\n}[]\n\nconst useFilter = () => {\n  const [books, setBooks] = useState<Books>(source)\n  const [searchLib, setLib] = useState<string>('全て')\n  const [kind, setKind] = useState<string>('全て')\n  useEffect(() => {\n    if (searchLib === '全て' && kind === '全て') {\n      setBooks(source)\n      return\n    }\n    if (searchLib === '全て' && kind !== '全て') {\n      setBooks(source.filter(({ ndc }) => ndc === kind))\n      return\n    }\n    if (kind === '全て' && searchLib !== '全て') {\n      setBooks(\n        source.filter(({ libs }) => libs.find((lib) => lib === searchLib)),\n      )\n      return\n    }\n    setBooks(\n      source\n        .filter(({ ndc }) => ndc === kind)\n        .filter(({ libs }) => libs.find((lib) => lib === searchLib)),\n    )\n  }, [searchLib, kind])\n\n  const findByLibrary = useCallback((libName) => {\n    setLib(libName)\n  }, [])\n\n  const findByKinds = useCallback((kind) => {\n    setKind(kind)\n  }, [])\n\n  const libNames = ['全て', 'なし'].concat(\n    Array.from(\n      new Set(\n        books\n          .filter(({ libs }) => libs.find((lib) => lib !== 'なし'))\n          .flatMap(({ libs }) => libs),\n      ),\n    ),\n  )\n\n  const kinds =\n    searchLib !== '全て'\n      ? ['全て'].concat(\n          Array.from(\n            new Set(\n              source\n                .filter(({ libs }) => libs.find((lib) => lib === searchLib))\n                .filter(({ ndc }) => ndc)\n                .map(({ ndc }) => ndc),\n            ),\n          ),\n        )\n      : ['全て'].concat(\n          Array.from(\n            new Set(books.filter(({ ndc }) => ndc).map(({ ndc }) => ndc)),\n          ),\n        )\n\n  return { books, libNames, kinds, findByLibrary, findByKinds, searchLib, kind }\n}\n\nconst App = () => {\n  const {\n    books,\n    libNames,\n    kinds,\n    findByLibrary,\n    findByKinds,\n    searchLib,\n    kind,\n  } = useFilter()\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>\n            <select value={kind} onChange={(e) => findByKinds(e.target.value)}>\n              {kinds.map((kind, i) => (\n                <option value={kind} key={i}>\n                  {kind}\n                </option>\n              ))}\n            </select>\n          </th>\n          <th>検索した本の名前</th>\n          <th>検索結果</th>\n          <th>\n            <select\n              value={searchLib}\n              onChange={(e) => findByLibrary(e.target.value)}\n            >\n              {libNames.map((lib, i) => (\n                <option value={lib} key={i}>\n                  {lib}\n                </option>\n              ))}\n            </select>\n          </th>\n          <th>サジェスト検索</th>\n          <th>わかち書き検索</th>\n        </tr>\n      </thead>\n      <tbody>\n        {books.map((book, i) => (\n          <TD key={i} {...book} />\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}