{"version":3,"sources":["App.tsx","index.tsx"],"names":["Table","children","style","borderCollapse","TD","title","url","libs","isSuggest","isWakatiGaki","resultTitle","target","href","map","lib","i","key","App","useState","source","books","setBooks","findByLibrary","useCallback","libName","filter","find","concat","Array","from","Set","flatMap","useFilter","libNames","onChange","e","value","book","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wkpOAGMA,EAA2C,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClD,OAAO,2BAAOC,MAAO,CAAEC,eAAgB,aAAeF,IAGlDG,EAOD,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,IAAKC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACjD,OACE,4BACE,4BAAKL,GACL,4BACW,iBAARC,EACCI,EAEA,uBAAGC,OAAO,QAAQC,KAAMN,GACrBI,IAIP,4BACGH,EAAKM,KAAI,SAACC,EAAKC,GAAN,OACR,yBAAKC,IAAKD,GAAID,OAGlB,4BAAKN,EAAY,eAAO,4BACxB,4BAAKC,EAAe,eAAO,8BAsElBQ,EA9BH,WAAO,IAAD,EA1BA,WAAqD,IAAD,EAC1CC,mBAAgBC,GAD0B,mBAC7DC,EAD6D,KACtDC,EADsD,KAE9DC,EAAgBC,uBACpB,SAACC,GAKCH,EAJgB,iBAAZG,EAIKL,EAAOM,QAAO,qBAAGlB,KAAgBmB,MAAK,SAACZ,GAAD,OAASA,IAAQU,QAHrDL,KAKb,CAACE,IAaH,MAAO,CAACD,EAVS,CAAC,eAAM,gBAAMO,OAC5BC,MAAMC,KACJ,IAAIC,IACFX,EACGM,QAAO,qBAAGlB,KAAgBmB,MAAK,SAACZ,GAAD,MAAiB,iBAARA,QACxCiB,SAAQ,qBAAGxB,WAKKe,GAIgBU,GADzB,mBACTZ,EADS,KACFa,EADE,KACQX,EADR,KAEhB,OACE,kBAAC,EAAD,KACE,+BACE,4BACE,gFACA,wDACA,4BACE,4BAAQY,SAAU,SAACC,GAAD,OAAOb,EAAca,EAAExB,OAAOyB,SAC7CH,EAASpB,KAAI,SAACC,EAAKC,GAAN,OACZ,4BAAQqB,MAAOtB,EAAKE,IAAKD,GACtBD,QAKT,0EACA,4EAGJ,+BACGM,EAAMP,KAAI,SAACwB,EAAMtB,GAAP,OACT,kBAAC,EAAD,eAAIC,IAAKD,GAAOsB,U,MC3F1BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8918ba1f.chunk.js","sourcesContent":["import React, { ReactNode, useCallback, useState } from 'react'\nimport source from './result.json'\n\nconst Table: React.FC<{ children: ReactNode }> = ({ children }) => {\n  return <table style={{ borderCollapse: 'collapse' }}>{children}</table>\n}\n\nconst TD: React.FC<{\n  title: string\n  url: string\n  libs: string[]\n  isSuggest: boolean\n  isWakatiGaki: boolean\n  resultTitle: string\n}> = ({ title, url, libs, isSuggest, isWakatiGaki, resultTitle }) => {\n  return (\n    <tr>\n      <td>{title}</td>\n      <td>\n        {url === 'なし' ? (\n          resultTitle\n        ) : (\n          <a target=\"blank\" href={url}>\n            {resultTitle}\n          </a>\n        )}\n      </td>\n      <td>\n        {libs.map((lib, i) => (\n          <div key={i}>{lib}</div>\n        ))}\n      </td>\n      <td>{isSuggest ? 'した' : 'してない'}</td>\n      <td>{isWakatiGaki ? 'した' : 'してない'}</td>\n    </tr>\n  )\n}\n\ntype Books = {\n  title: string\n  url: string\n  libs: string[]\n  isSuggest: boolean\n  isWakatiGaki: boolean\n  resultTitle: string\n}[]\n\nconst useFilter = (): [Books, string[], (libName: string) => void] => {\n  const [books, setBooks] = useState<Books>(source)\n  const findByLibrary = useCallback(\n    (libName) => {\n      if (libName === '全て') {\n        setBooks(source)\n        return\n      }\n      setBooks(source.filter(({ libs }) => libs.find((lib) => lib === libName)))\n    },\n    [setBooks],\n  )\n\n  const libNames = ['全て', 'なし'].concat(\n    Array.from(\n      new Set(\n        source\n          .filter(({ libs }) => libs.find((lib) => lib !== 'なし'))\n          .flatMap(({ libs }) => libs),\n      ),\n    ),\n  )\n\n  return [books, libNames, findByLibrary]\n}\n\nconst App = () => {\n  const [books, libNames, findByLibrary] = useFilter()\n  return (\n    <Table>\n      <thead>\n        <tr>\n          <th>検索した本の名前</th>\n          <th>検索結果</th>\n          <th>\n            <select onChange={(e) => findByLibrary(e.target.value)}>\n              {libNames.map((lib, i) => (\n                <option value={lib} key={i}>\n                  {lib}\n                </option>\n              ))}\n            </select>\n          </th>\n          <th>サジェスト検索</th>\n          <th>わかち書き検索</th>\n        </tr>\n      </thead>\n      <tbody>\n        {books.map((book, i) => (\n          <TD key={i} {...book} />\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}